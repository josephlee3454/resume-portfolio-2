[{"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js":"1","/home/owner/dojo/js/props/resume/resume/src/App.js":"2","/home/owner/dojo/js/props/resume/resume/src/index.js":"3","/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js":"4","/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js":"5","/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js":"6","/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js":"7","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js":"8","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js":"9","/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js":"10","/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js":"11","/home/owner/dojo/js/props/resume/resume/src/aws-exports.js":"12"},{"size":362,"mtime":1612022400986,"results":"13","hashOfConfig":"14"},{"size":1214,"mtime":1615999118066,"results":"15","hashOfConfig":"14"},{"size":635,"mtime":1615999118070,"results":"16","hashOfConfig":"14"},{"size":2653,"mtime":1616000989653,"results":"17","hashOfConfig":"14"},{"size":769,"mtime":1616000989653,"results":"18","hashOfConfig":"14"},{"size":2273,"mtime":1616000989653,"results":"19","hashOfConfig":"14"},{"size":10515,"mtime":1613069128797,"results":"20","hashOfConfig":"14"},{"size":4031,"mtime":1612316907684,"results":"21","hashOfConfig":"14"},{"size":1348,"mtime":1612127506778,"results":"22","hashOfConfig":"14"},{"size":7146,"mtime":1616000989653,"results":"23","hashOfConfig":"14"},{"size":370,"mtime":1612136400284,"results":"24","hashOfConfig":"14"},{"size":422,"mtime":1613070538995,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1daeoey",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js",[],["54","55"],"/home/owner/dojo/js/props/resume/resume/src/App.js",["56","57"],"import { Container, Grid} from '@material-ui/core';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport React from 'react'\nimport Profile from './componenets/Profile/Profile'\nimport Footer from './componenets/Footer/Footer'\nimport Header from './componenets/Header/Header'\nimport Portfolio from './Pages/Portfilio/Portfolio'\nimport Resume from './Pages/Resume/Resume'\nimport './App.css'\nimport {BrowserRouter as Router, Switch} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={7}>\n        <Grid  item xs={12} sm={12} md={4} lg={3} style={{backgroundColor: '#e0f7fa'}} className=\"profile\">\n          <Profile className=\"profile\" />\n        </Grid>\n        <Grid item xs >\n          <Router>\n          <Header />\n          <div className=\"main-content container_shadow\">\n\n            <Switch>\n            <Route path='/portfolio'>\n            <Portfolio />\n            </Route> \n            <Route>\n            <Resume path ='/' />\n            </Route>\n\n            </Switch>\n          </div>\n          </Router>\n              \n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/owner/dojo/js/props/resume/resume/src/index.js",[],"/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js",["58","59","60","61","62","63"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js",["64"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js",["80","81","82","83","84","85"],"import React from 'react'\nimport { Grid, Typography , Icon, TextField} from '@material-ui/core'\nimport './Resume.css'\nimport resumeData from '../../utils/resumeData'\nimport CustomTimeline ,{CustomTimelineseperator}from  \"../../componenets/Timeline/Timeline\"\nimport WorkIcon from '@material-ui/icons/Work';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator'\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineContent from '@material-ui/lab/TimelineContent'\nimport SchoolIcon from '@material-ui/icons/School';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CustomButton from '../../componenets/Button/Button'\nimport emailjs from \"emailjs-com\";\n\n\n// function sendEmail(e) {\n\n  \n//     emailjs.sendForm('gmail', 'template_7ku9gr8', e.target, 'user_SEqHDgW8ecIu6LFx2F6wC')\n//         .then((result) => {\n//             console.log(result.text);\n//         }, (error) => {\n//             console.log(error.text);\n//         });\n\n//         e.target.reset()\n// }\n\n\n\nconst Resume = () => {\n    return (\n        <>\n       \n        {/* about */}\n        <div className=\"aboutme-back\">\n        <Grid container className='section pb_45  pt_45'>\n            <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> About Me </h6>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography variant=\"body2\" className=\"about_text\">{resumeData.about}</Typography>\n            </Grid>\n        </Grid >\n     \n        {/* education experince */}\n         <Grid container className='section pb_45 '>\n         <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Resume </h6>\n            </Grid >\n            <Grid item xs={12}>\n                <Grid container className=\"resume_timeline\">\n                    {/* work hist */}\n                    <Grid item sm={12} md={6}>\n                        <CustomTimeline title=\"work experince\" icon={<WorkIcon/>}>\n                            {resumeData.workExps.map( (workExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {workExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {workExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {workExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                        </Grid>\n                    {/* education */}\n                    <Grid item sm={12} md={6}>\n                    <CustomTimeline title=\"Education\" icon={<SchoolIcon/>}>\n                            {resumeData.educationExps.map( (educationExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {educationExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {educationExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {educationExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                    </Grid>\n                </Grid>\n            </Grid>\n         </Grid>\n         {/* langaugess */}\n         </div>\n        <Grid container className='section pb_45'>\n        <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Job Skills </h6>\n            </Grid >\n\n\n            <Grid item xs = {12}>\n                <Grid container spacing={3} justify='space-around'>\n                    {resumeData.jobSkills.map(jobSkill=>(\n                        <Grid item xs={12} sm={6} md={3}>\n                        \n                    <div className=\"jobSkill\">\n                        <Icon className='jobSkill_icon'>{jobSkill.icon}</Icon>\n                        <Typography className='jobSkill_title' variant='h6'>{jobSkill.title}</Typography>\n                        <Typography className='jobSkill_description' variant='body2'>{jobSkill.description}</Typography>\n\n                    </div>\n                        \n                        </Grid>\n\n                    ))}\n                </Grid>\n\n            </Grid>\n        </Grid>\n        {/* skills */}\n        <div className=\"skills-div\">\n        <Grid container  className='section graybg pb_45 p_50'>\n            \n            <Grid item xs={12} >\n                <Grid container justify='space-between' spacing={3}>\n                {resumeData.devSkills.map(devSkill =>(\n                <Grid item xs={12} md={3} sm={6}>\n                    <Paper elevation={0} className=\"devSkill\">\n                        <Typography variant='h6' className='devSkills_title'>\n                            {devSkill.title}\n                        </Typography>\n                        {devSkill.description.map((element) => (\n                            <Typography variant='body2' className='devSkill_description'>\n                                <TimelineDot variant={'outlined'} className=\"timeline_dot\"/>\n                                    {element}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </Grid>\n\n            ) )}\n                </Grid>\n            </Grid>\n          \n        \n        </Grid>\n        {/* contact */}\n        <Grid container spacing={5} className='section pt_45 pb_45'>\n                {/* form for the contacts */}\n                <Grid item xs={12} lg={7}>\n                    {/* <form onSubmit={sendEmail()}> */}\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Form</h6>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"name\" label='Name'/>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"eamil\" label='@email'/>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <TextField fullWidth name=\"message\" label='Message' multiline rows={4}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <CustomButton text='Submit'  />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                {/* </form> */}\n                </Grid>\n                {/* contact_info */}\n                <Grid item xs={12} lg={5}>\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Information</h6>\n\n                        </Grid>\n                       \n                        <Grid item xs={12} >\n                            <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Location: </span> {resumeData.city}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Phone: </span> {resumeData.phone}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Email: </span> {resumeData.email}\n                                </Typography>\n                            </Grid>\n                            </Grid>\n\n                        </Grid>\n\n                   \n                    <Grid item xs={12}>\n                        <Grid container className=\"contactInfo_socialsContainer\">\n                            {Object.keys(resumeData.socials).map((key)=>(\n                                <Grid item className=\"contactInfo_social\"> \n                                    <a href={resumeData.socials[key].link}>\n                                        {resumeData.socials[key].Icon}\n                                    </a>\n                                </Grid>\n                                \n                            ))}\n                        </Grid>\n\n                    </Grid>\n                    \n                </Grid>\n                        \n                </Grid>            \n        </Grid>\n    \n        </div>\n        </>\n\n    )\n}\n\nexport default Resume\n","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js",["86","87","88","89","90"],"import { Grid, Tabs, Tab, \n    CardActionArea, CardMedia, Typography, \n    Card, CardContent, Grow, DialogContent, \n    DialogActions , Dialog, DialogTitle}\n    from '@material-ui/core';\n\nimport './Portfolio.css'\nimport React, {useState} from 'react'\nimport resumeData from '../../utils/resumeData'\n\n\n\nconst Portfolio = () => {\n    \n    const [tabValue, setTabValue] = useState(\"ALL\");\n    \n    const [projectDialog, setProjectDialog] = useState(false);\n\n\n    \n    \n    return (\n        <Grid container spacing={3} className= \" section pb_45 pt_45\">\n            <Grid item className= \"section_title mb_20\">\n                <span></span>\n                <h6 className=\"section_title_text\">Portfolio</h6>\n            </Grid>\n\n\n            <Grid item xs={12}>\n                <Tabs \n                value = {tabValue} \n                indicatorColor=\"white\" \n                className='custom_tabs' \n                onChange={(event,newvalue) => setTabValue(newvalue)}>\n                <Tab \n                label=\"ALL\" \n                value=\"ALL\" \n                className={\n                    tabValue == 'All' ? 'customTabs_item active': 'customTabs_item'\n                    } />\n\n\n                    {[...new Set(resumeData.projects.map(item => item.tag))].map(tag=>(\n                        <Tab label={tag} value={tag} className={tabValue == tag  ? 'customTabs_item active': 'customTabs_item'}></Tab>\n                        \n                    ))}\n\n                </Tabs>\n            </Grid>\n            \n\n            <Grid item xs={12}>\n                <Grid container spacing={3} >\n                    {resumeData.projects.map((project) => (\n\n                        <>\n                        {tabValue == project.tag || tabValue ==\"ALL\" ? ( \n\n                            <Grid item xs={12} sm={6} md={4} >\n                                <Grow in timeout={1000}>\n                                    <Card className='CustomCard' onClick={() => setProjectDialog(project)}>\n                                        <CardActionArea>\n                                            <CardMedia className='customCard_image' image={project.image} title={project.title}/>\n                                                <CardContent>\n                                                    <Typography variant={\"body2\"} className='customCard_title'>{project.title}</Typography>\n                                                    <Typography variant={ 'caption'} className='customCard_caption'>{project.caption}</Typography>\n                                                </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Grow>\n                            </Grid>\n                        ):null}\n                        </>\n                    ))}\n                </Grid>\n                    </Grid>\n\n\n\n                    <Dialog open={projectDialog} onClose={()=>setProjectDialog(false)} className=\"projectDialog\" fullWidth>\n                        <DialogTitle onClose={()=>setProjectDialog(false)}>\n                            {projectDialog.title}\n                        </DialogTitle>\n                    <img src={projectDialog.image} alt=\"not \" className='projectDialog_image'/>\n                    <DialogContent>\n                        <Typography className='projectDialog_description'>\n                            \n                            {projectDialog.description}\n\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions className='projectDialog_actions'>\n                        {projectDialog?.links?.map(link => (\n                            <a href={link.link} target=\"_blank\" className=\"projectDialog_icon\">\n                                {link.icon}\n                            </a>\n                       \n                           ))}\n                    </DialogActions>\n                </Dialog>\n        </Grid>\n    )\n}\n\nexport default Portfolio\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js",[],"/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js",["91","92","93","94"],"/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js",[],"/home/owner/dojo/js/props/resume/resume/src/aws-exports.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":2,"column":32,"nodeType":"101","messageId":"102","endLine":2,"endColumn":36},{"ruleId":"99","severity":1,"message":"104","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":24},{"ruleId":"99","severity":1,"message":"105","line":11,"column":10,"nodeType":"101","messageId":"102","endLine":11,"endColumn":18},{"ruleId":"99","severity":1,"message":"106","line":11,"column":20,"nodeType":"101","messageId":"102","endLine":11,"endColumn":28},{"ruleId":"99","severity":1,"message":"107","line":12,"column":8,"nodeType":"101","messageId":"102","endLine":12,"endColumn":20},{"ruleId":"99","severity":1,"message":"108","line":13,"column":8,"nodeType":"101","messageId":"102","endLine":13,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":23,"column":21,"nodeType":"111","endLine":23,"endColumn":67},{"ruleId":"109","severity":1,"message":"110","line":16,"column":33,"nodeType":"111","endLine":16,"endColumn":98},{"ruleId":"99","severity":1,"message":"112","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"113","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":20},{"ruleId":"99","severity":1,"message":"114","line":2,"column":21,"nodeType":"101","messageId":"102","endLine":2,"endColumn":32},{"ruleId":"99","severity":1,"message":"115","line":2,"column":46,"nodeType":"101","messageId":"102","endLine":2,"endColumn":57},{"ruleId":"99","severity":1,"message":"116","line":3,"column":22,"nodeType":"101","messageId":"102","endLine":3,"endColumn":35},{"ruleId":"99","severity":1,"message":"117","line":3,"column":37,"nodeType":"101","messageId":"102","endLine":3,"endColumn":48},{"ruleId":"99","severity":1,"message":"118","line":3,"column":50,"nodeType":"101","messageId":"102","endLine":3,"endColumn":58},{"ruleId":"99","severity":1,"message":"119","line":3,"column":61,"nodeType":"101","messageId":"102","endLine":3,"endColumn":68},{"ruleId":"99","severity":1,"message":"120","line":3,"column":70,"nodeType":"101","messageId":"102","endLine":3,"endColumn":78},{"ruleId":"99","severity":1,"message":"121","line":3,"column":80,"nodeType":"101","messageId":"102","endLine":3,"endColumn":90},{"ruleId":"99","severity":1,"message":"122","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":21},{"ruleId":"99","severity":1,"message":"103","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":31,"column":40,"nodeType":"125","messageId":"126","endLine":31,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":37,"column":82,"nodeType":"125","messageId":"126","endLine":37,"endColumn":84},{"ruleId":"109","severity":1,"message":"110","line":45,"column":29,"nodeType":"111","endLine":45,"endColumn":84},{"ruleId":"99","severity":1,"message":"127","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":25},{"ruleId":"99","severity":1,"message":"128","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":25},{"ruleId":"99","severity":1,"message":"129","line":16,"column":8,"nodeType":"101","messageId":"102","endLine":16,"endColumn":15},{"ruleId":"130","severity":1,"message":"131","line":41,"column":57,"nodeType":"132","endLine":41,"endColumn":61},{"ruleId":"130","severity":1,"message":"131","line":52,"column":54,"nodeType":"132","endLine":52,"endColumn":58},{"ruleId":"130","severity":1,"message":"131","line":108,"column":53,"nodeType":"132","endLine":108,"endColumn":57},{"ruleId":"123","severity":1,"message":"124","line":40,"column":30,"nodeType":"125","messageId":"126","endLine":40,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":45,"column":74,"nodeType":"125","messageId":"126","endLine":45,"endColumn":76},{"ruleId":"123","severity":1,"message":"124","line":58,"column":35,"nodeType":"125","messageId":"126","endLine":58,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":58,"column":62,"nodeType":"125","messageId":"126","endLine":58,"endColumn":64},{"ruleId":"109","severity":1,"message":"110","line":95,"column":29,"nodeType":"111","endLine":95,"endColumn":96},{"ruleId":"99","severity":1,"message":"133","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":18},{"ruleId":"99","severity":1,"message":"134","line":9,"column":8,"nodeType":"101","messageId":"102","endLine":9,"endColumn":18},{"ruleId":"99","severity":1,"message":"135","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":20},{"ruleId":"136","severity":1,"message":"137","line":13,"column":1,"nodeType":"138","endLine":155,"endColumn":2},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'Timeline' is defined but never used.","'Telegram' is defined but never used.","'CustomButton' is defined but never used.","'GetAppIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'SchoolRounded' is defined but never used.","'WorkRounder' is defined but never used.","'Facebook' is defined but never used.","'Twitter' is defined but never used.","'LinkedIn' is defined but never used.","'GitHubIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'emailjs' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Porjectone' is defined but never used.","'Projecttwo' is defined but never used.","'Projectthree' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]