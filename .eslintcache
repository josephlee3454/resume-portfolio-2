[{"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js":"1","/home/owner/dojo/js/props/resume/resume/src/App.js":"2","/home/owner/dojo/js/props/resume/resume/src/index.js":"3","/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js":"4","/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js":"5","/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js":"6","/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js":"7","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js":"8","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js":"9","/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js":"10","/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js":"11"},{"size":362,"mtime":1612022400986,"results":"12","hashOfConfig":"13"},{"size":1214,"mtime":1615999118066,"results":"14","hashOfConfig":"13"},{"size":644,"mtime":1616007332609,"results":"15","hashOfConfig":"13"},{"size":2652,"mtime":1616007134771,"results":"16","hashOfConfig":"13"},{"size":769,"mtime":1616000989653,"results":"17","hashOfConfig":"13"},{"size":2281,"mtime":1616007095402,"results":"18","hashOfConfig":"13"},{"size":10515,"mtime":1613069128797,"results":"19","hashOfConfig":"13"},{"size":4031,"mtime":1612316907684,"results":"20","hashOfConfig":"13"},{"size":1348,"mtime":1612127506778,"results":"21","hashOfConfig":"13"},{"size":6780,"mtime":1616007095402,"results":"22","hashOfConfig":"13"},{"size":370,"mtime":1612136400284,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u8vid4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/owner/dojo/js/props/resume/resume/src/reportWebVitals.js",[],"/home/owner/dojo/js/props/resume/resume/src/App.js",["53","54"],"import { Container, Grid} from '@material-ui/core';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport React from 'react'\nimport Profile from './componenets/Profile/Profile'\nimport Footer from './componenets/Footer/Footer'\nimport Header from './componenets/Header/Header'\nimport Portfolio from './Pages/Portfilio/Portfolio'\nimport Resume from './Pages/Resume/Resume'\nimport './App.css'\nimport {BrowserRouter as Router, Switch} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={7}>\n        <Grid  item xs={12} sm={12} md={4} lg={3} style={{backgroundColor: '#e0f7fa'}} className=\"profile\">\n          <Profile className=\"profile\" />\n        </Grid>\n        <Grid item xs >\n          <Router>\n          <Header />\n          <div className=\"main-content container_shadow\">\n\n            <Switch>\n            <Route path='/portfolio'>\n            <Portfolio />\n            </Route> \n            <Route>\n            <Resume path ='/' />\n            </Route>\n\n            </Switch>\n          </div>\n          </Router>\n              \n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/owner/dojo/js/props/resume/resume/src/index.js",[],"/home/owner/dojo/js/props/resume/resume/src/componenets/Profile/Profile.js",["55","56","57","58","59","60"],"import { Typography } from '@material-ui/core'\nimport {React, useState} from 'react'\nimport CustomTimeline ,{CustomTimelineseperator}from  \"../Timeline/Timeline\"\nimport CodeIcon from '@material-ui/icons/Code';\n\nimport resumeData from '../../utils/resumeData'\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport './Profile.css'\nimport joe from '../assets/images/joeprofile.jpg'\nimport { Timeline, Telegram } from '@material-ui/icons';\nimport CustomButton from '../Button/Button'\nimport GetAppIcon from '@material-ui/icons/GetApp';\n// import EmailIcon from '@material-ui/icons/Email';\n\n\nconst CustomTimelineItem= ({title,text,link}) => (\n    <TimelineItem className=\"timeline_content\">\n        <CustomTimelineseperator />\n            <TimelineContent>\n               \n                    {link ? (<Typography className=\"timelineItem_text\"><span>{title}</span>{\" \"}\n                    <a className='aa' href={link} target='_blank'>{text}\n                    </a></Typography>\n                    ) : (\n                    <Typography className=\"timelineItem_text\" ><span>{title}</span> {text}</Typography>\n\n                )}\n            </TimelineContent>\n    </TimelineItem>\n)\n\nconst Profile = () => {\n    return (\n        <div className=\"profile\">\n        <div className='profile_container_shadow'>\n            <div className='profile_name'>\n            <Typography className=\"name\">{resumeData.name}</Typography>\n            <Typography className=\"title\">{resumeData.title}</Typography>\n\n            </div>\n            <figure className='profile_image'>\n                <img src={joe} alt =\"\"/>\n       \n            </figure>\n            <div className='profile_information'>\n                <CustomTimeline icon={<CodeIcon />}>\n                <CustomTimelineItem title=\"Name:\" text={resumeData.name}/>\n                <CustomTimelineItem title=\"Title:\" text={resumeData.title}/>\n                <CustomTimelineItem title=\"Email:\" text={resumeData.email}/>\n\n\n                {Object.keys(resumeData.socials).map((key) => (\n                    <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].link}  />\n\n                ))} \n                </CustomTimeline >\n             \n                <div  className=\"button_container\" style={{display: 'flex'}}>\n                {/* <a href=\"https://react.school\" target=\"_blank\">\n                   <CustomButton text={\"See Resume\"} icon={<Telegram/>} />\n                </a> */}\n                </div>\n\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default Profile\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Footer/Footer.js",["61"],"import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport './Footer.css'\nimport resumeData from '../../utils/resumeData'\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <div ClassName = \"footer_left\" >\n                <Typography className= \"footer_name\">{resumeData.name}</Typography>\n            </div>\n            <div ClassName = \"footer_right\">\n                <Typography className = \"footer_cp\">\n                    Developed by <a href =\"/\" target=\"_blank\">Joseph Lee</a> \n                    <br/>\n                    Cloned from <a href=\"https://themeforest.net/user/tavonline\" target=\"_blank\">Travoline</a>\n                </Typography>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Header/Header.js",["62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"import React from \"react\"\nimport {Button,Form,FormControl,Nav, Navbar, NavDropdown}from \"react-bootstrap\"\nimport {HomeRounded, SchoolRounded, WorkRounder, Facebook , Twitter, LinkedIn, GitHubIcon, Telegram} from \"@material-ui/icons\"\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport {Link, NavLink, withRouter } from \"react-router-dom\"\nimport resumeData from \"../../utils/resumeData\"\n// import LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport CustomButton from '../Button/Button'\nimport './Header.css'\n\nconst Header = (props) => {\n    // if the  props exist fetch location if loction exists fetch pathname\n    const pathName = props?.location?.pathName\n    return (\n        <Navbar  expand=\"lg\"  className=\"header\">\n            {/* home */}\n            <Nav.Link as={NavLink} to=\"/\" className= \"header_navlink\">\n                <Navbar.Brand className=\"header_home\">\n                    <HomeRounded />\n                </Navbar.Brand>\n            </Nav.Link>\n\n            <Navbar.Toggle />\n            <Navbar.Collapse>\n                <Nav className='header_left'>\n            {/* resume home links */}\n                    <Nav.Link as={NavLink} \n                    to = \"/\" \n                    className={pathName==\"/\" ? \"header_link_active\":\"header_link\"}>\n                        Resume\n                    </Nav.Link>\n       \n            {/* portfolio */}\n\n                    <Nav.Link as={NavLink} to = \"/portfolio\" className={pathName ==\"/portfolio\" ? \"header_link_active\":\"header_link\"}>\n                        Portfolio\n                    </Nav.Link>\n\n            </Nav>\n                <div className=\"header_right\">\n                    {\n                        Object.keys(resumeData.socials).map((key) =>(\n                            <a href={resumeData.socials[key].link} target=\"_blank\">\n                                {resumeData.socials[key].Icon}\n                               \n                            </a>\n                    ))}\n                    {/* <CustomButton text={'Hire Me'} icon={<Telegram />}/> */}\n                </div>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default withRouter(Header);\n","/home/owner/dojo/js/props/resume/resume/src/Pages/Resume/Resume.js",["79","80","81","82","83","84"],"import React from 'react'\nimport { Grid, Typography , Icon, TextField} from '@material-ui/core'\nimport './Resume.css'\nimport resumeData from '../../utils/resumeData'\nimport CustomTimeline ,{CustomTimelineseperator}from  \"../../componenets/Timeline/Timeline\"\nimport WorkIcon from '@material-ui/icons/Work';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator'\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\nimport TimelineContent from '@material-ui/lab/TimelineContent'\nimport SchoolIcon from '@material-ui/icons/School';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CustomButton from '../../componenets/Button/Button'\nimport emailjs from \"emailjs-com\";\n\n\n// function sendEmail(e) {\n\n  \n//     emailjs.sendForm('gmail', 'template_7ku9gr8', e.target, 'user_SEqHDgW8ecIu6LFx2F6wC')\n//         .then((result) => {\n//             console.log(result.text);\n//         }, (error) => {\n//             console.log(error.text);\n//         });\n\n//         e.target.reset()\n// }\n\n\n\nconst Resume = () => {\n    return (\n        <>\n       \n        {/* about */}\n        <div className=\"aboutme-back\">\n        <Grid container className='section pb_45  pt_45'>\n            <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> About Me </h6>\n            </Grid>\n            <Grid item xs={12}>\n            <Typography variant=\"body2\" className=\"about_text\">{resumeData.about}</Typography>\n            </Grid>\n        </Grid >\n     \n        {/* education experince */}\n         <Grid container className='section pb_45 '>\n         <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Resume </h6>\n            </Grid >\n            <Grid item xs={12}>\n                <Grid container className=\"resume_timeline\">\n                    {/* work hist */}\n                    <Grid item sm={12} md={6}>\n                        <CustomTimeline title=\"work experince\" icon={<WorkIcon/>}>\n                            {resumeData.workExps.map( (workExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {workExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {workExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {workExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                        </Grid>\n                    {/* education */}\n                    <Grid item sm={12} md={6}>\n                    <CustomTimeline title=\"Education\" icon={<SchoolIcon/>}>\n                            {resumeData.educationExps.map( (educationExp)=> (\n                                <TimelineItem>\n                                    <CustomTimelineseperator />\n                                    <TimelineContent className='timeline_content'>\n                                        <Typography className=\"timeline_title\">\n                                            {educationExp.title}\n                                        </Typography>\n                                        <Typography variant='body1' className=\"timeline_date\">\n                                            {educationExp.date}\n                                        </Typography>\n                                        <Typography variant='caption' className=\"timeline_description\">\n                                            {educationExp.description}\n                                        </Typography>\n                                    </TimelineContent>\n                                </TimelineItem>\n\n                            ) )}\n                        </CustomTimeline>\n                    </Grid>\n                </Grid>\n            </Grid>\n         </Grid>\n         {/* langaugess */}\n         </div>\n        <Grid container className='section pb_45'>\n        <Grid item  className=\"section_title mb_30\" item xs={12}>\n                <span></span>\n                <h6 className=\"section_title_txt\"> Job Skills </h6>\n            </Grid >\n\n\n            <Grid item xs = {12}>\n                <Grid container spacing={3} justify='space-around'>\n                    {resumeData.jobSkills.map(jobSkill=>(\n                        <Grid item xs={12} sm={6} md={3}>\n                        \n                    <div className=\"jobSkill\">\n                        <Icon className='jobSkill_icon'>{jobSkill.icon}</Icon>\n                        <Typography className='jobSkill_title' variant='h6'>{jobSkill.title}</Typography>\n                        <Typography className='jobSkill_description' variant='body2'>{jobSkill.description}</Typography>\n\n                    </div>\n                        \n                        </Grid>\n\n                    ))}\n                </Grid>\n\n            </Grid>\n        </Grid>\n        {/* skills */}\n        <div className=\"skills-div\">\n        <Grid container  className='section graybg pb_45 p_50'>\n            \n            <Grid item xs={12} >\n                <Grid container justify='space-between' spacing={3}>\n                {resumeData.devSkills.map(devSkill =>(\n                <Grid item xs={12} md={3} sm={6}>\n                    <Paper elevation={0} className=\"devSkill\">\n                        <Typography variant='h6' className='devSkills_title'>\n                            {devSkill.title}\n                        </Typography>\n                        {devSkill.description.map((element) => (\n                            <Typography variant='body2' className='devSkill_description'>\n                                <TimelineDot variant={'outlined'} className=\"timeline_dot\"/>\n                                    {element}\n                            </Typography>\n                        ))}\n                    </Paper>\n                </Grid>\n\n            ) )}\n                </Grid>\n            </Grid>\n          \n        \n        </Grid>\n        {/* contact */}\n        <Grid container spacing={5} className='section pt_45 pb_45'>\n                {/* form for the contacts */}\n                <Grid item xs={12} lg={7}>\n                    {/* <form onSubmit={sendEmail()}> */}\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Form</h6>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"name\" label='Name'/>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField fullWidth name=\"eamil\" label='@email'/>\n                                </Grid>\n                                <Grid item xs={12} >\n                                    <TextField fullWidth name=\"message\" label='Message' multiline rows={4}/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <CustomButton text='Submit'  />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                {/* </form> */}\n                </Grid>\n                {/* contact_info */}\n                <Grid item xs={12} lg={5}>\n                    <Grid container>\n                        <Grid item className= \"section_title mb_30\">\n                            <span></span>\n                            <h6 className=\"section_title_text\">Contact Information</h6>\n\n                        </Grid>\n                       \n                        <Grid item xs={12} >\n                            <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Location: </span> {resumeData.city}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Phone: </span> {resumeData.phone}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Typography className='contacts_item'>\n                                    <span>Email: </span> {resumeData.email}\n                                </Typography>\n                            </Grid>\n                            </Grid>\n\n                        </Grid>\n\n                   \n                    <Grid item xs={12}>\n                        <Grid container className=\"contactInfo_socialsContainer\">\n                            {Object.keys(resumeData.socials).map((key)=>(\n                                <Grid item className=\"contactInfo_social\"> \n                                    <a href={resumeData.socials[key].link}>\n                                        {resumeData.socials[key].Icon}\n                                    </a>\n                                </Grid>\n                                \n                            ))}\n                        </Grid>\n\n                    </Grid>\n                    \n                </Grid>\n                        \n                </Grid>            \n        </Grid>\n    \n        </div>\n        </>\n\n    )\n}\n\nexport default Resume\n","/home/owner/dojo/js/props/resume/resume/src/Pages/Portfilio/Portfolio.js",["85","86","87","88","89"],"import { Grid, Tabs, Tab, \n    CardActionArea, CardMedia, Typography, \n    Card, CardContent, Grow, DialogContent, \n    DialogActions , Dialog, DialogTitle}\n    from '@material-ui/core';\n\nimport './Portfolio.css'\nimport React, {useState} from 'react'\nimport resumeData from '../../utils/resumeData'\n\n\n\nconst Portfolio = () => {\n    \n    const [tabValue, setTabValue] = useState(\"ALL\");\n    \n    const [projectDialog, setProjectDialog] = useState(false);\n\n\n    \n    \n    return (\n        <Grid container spacing={3} className= \" section pb_45 pt_45\">\n            <Grid item className= \"section_title mb_20\">\n                <span></span>\n                <h6 className=\"section_title_text\">Portfolio</h6>\n            </Grid>\n\n\n            <Grid item xs={12}>\n                <Tabs \n                value = {tabValue} \n                indicatorColor=\"white\" \n                className='custom_tabs' \n                onChange={(event,newvalue) => setTabValue(newvalue)}>\n                <Tab \n                label=\"ALL\" \n                value=\"ALL\" \n                className={\n                    tabValue == 'All' ? 'customTabs_item active': 'customTabs_item'\n                    } />\n\n\n                    {[...new Set(resumeData.projects.map(item => item.tag))].map(tag=>(\n                        <Tab label={tag} value={tag} className={tabValue == tag  ? 'customTabs_item active': 'customTabs_item'}></Tab>\n                        \n                    ))}\n\n                </Tabs>\n            </Grid>\n            \n\n            <Grid item xs={12}>\n                <Grid container spacing={3} >\n                    {resumeData.projects.map((project) => (\n\n                        <>\n                        {tabValue == project.tag || tabValue ==\"ALL\" ? ( \n\n                            <Grid item xs={12} sm={6} md={4} >\n                                <Grow in timeout={1000}>\n                                    <Card className='CustomCard' onClick={() => setProjectDialog(project)}>\n                                        <CardActionArea>\n                                            <CardMedia className='customCard_image' image={project.image} title={project.title}/>\n                                                <CardContent>\n                                                    <Typography variant={\"body2\"} className='customCard_title'>{project.title}</Typography>\n                                                    <Typography variant={ 'caption'} className='customCard_caption'>{project.caption}</Typography>\n                                                </CardContent>\n                                        </CardActionArea>\n                                    </Card>\n                                </Grow>\n                            </Grid>\n                        ):null}\n                        </>\n                    ))}\n                </Grid>\n                    </Grid>\n\n\n\n                    <Dialog open={projectDialog} onClose={()=>setProjectDialog(false)} className=\"projectDialog\" fullWidth>\n                        <DialogTitle onClose={()=>setProjectDialog(false)}>\n                            {projectDialog.title}\n                        </DialogTitle>\n                    <img src={projectDialog.image} alt=\"not \" className='projectDialog_image'/>\n                    <DialogContent>\n                        <Typography className='projectDialog_description'>\n                            \n                            {projectDialog.description}\n\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions className='projectDialog_actions'>\n                        {projectDialog?.links?.map(link => (\n                            <a href={link.link} target=\"_blank\" className=\"projectDialog_icon\">\n                                {link.icon}\n                            </a>\n                       \n                           ))}\n                    </DialogActions>\n                </Dialog>\n        </Grid>\n    )\n}\n\nexport default Portfolio\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Timeline/Timeline.js",[],"/home/owner/dojo/js/props/resume/resume/src/utils/resumeData.js",["90","91","92","93"],"import LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport CodeIcon from '@material-ui/icons/Code';\n// import WebIcon from '@material-ui/icons/Web';\n// import ComputerIcon from '@material-ui/icons/Computer';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport Porjectone from '../componenets/assets/images/project-one.png';\nimport Projecttwo from'../componenets/assets/images/projecttwo.jpeg';\nimport Projectthree from'../componenets/assets/images/projectthree.png';\n\n\nexport default {\n    name: \"Joseph Lee\",\n    title: \"Software Developer\",\n    birthday: \"September 3, 1992\",\n    email: \"joseph.lee3454@gmail.com\",\n    city: \"Seattle WA\",\n    phone: \"760-689-5248\",\n    about: \"Hello Welcome to My Resume page!!!!! My name is Joseph Lee and I am a former Marine turned software developer. I am also graduate of Code fellow’s Intermediate JavaScript & Advance Python Course and a graduate from the  Coding-Dojo’s Python, Java script (M.E.R.N), C# .net core. \",\n    workExps:[\n        {\n            title: \"Safeway\",\n            date: \"​January 2020- September 2020\",\n            description: \"Ranked as Top 3 Checker store wide,\\n Implemented COVID 19 plan for entire store, \\n Frequently assigned managerialresponsibilities\",\n        },\n        {\n            title: \"Columbia Distributing Delivery Driver\",\n            date: \"​July 2020 - November 2020\",\n            description: \"Rookie Driver of Month. Restructured the order process for two major vendors in order to save the company $3,000 /month. Saved the company $10000/month by reducing product losses from 3 othergrocery vendors.\",\n        },\n  \n        {\n            title: \"USMC vehicle commander\",\n            date: \"july 2011 - july 2015\",\n            description: \"Awarded Certification of Commendation for effectively repelling a night ambush(Afghanistan 2012). Meritorious Mast for organizing and leading 20 hours of instruction to 30marines and supervised live fire maneuvers (August 2013). Awarded Certificate of Appreciation from Charge De` Affairs Sana Yemen security platoon. 1 of 3 marines chosen to represent my company in the Marine Corps Machine Gun Leaders Course, where we were taught to tactically lead platoons in combat..\",\n        },\n        \n    ],\n    jobSkills: [\n        {\n            title: 'Developer',\n            description: 'I am a graduate of two full stack coding boot camps with knowledge of mutiple langauges and frameworks that are listed below ',\n            icon:<CodeIcon/>\n        },\n        {\n            title:'Manager',\n            description: 'While i have no experince leading any development teams i have been in various mangement roles thoughout my work history',\n            icon:< SupervisedUserCircleIcon />\n        }\n        ,\n        {\n            title: 'Team Player',\n            description: 'I have made mutiple contributions to group projects thoughout my developer as well through out my past work history',\n            icon :<PeopleOutlineIcon />\n        }\n    \n    ],\n    projects:[\n        {\n            tag: 'React/Django',\n            image: 'https://codyparker.com/wp-content/uploads/2016/10/dj-react.png',\n            title: \"Caller App\",\n            caption:\"twilio powered\",\n            description: \"This project was built with react and a django backend using a twilio api to handle calls. We built this project as a hr tool that will automatically run down a list by seniority to find a replacement and will leave them an automated voice message. \",\n            links:[\n            {link: 'https://github.com/slow-and-serious/caller-app', icon: <GitHubIcon /> },\n            {link: 'https://github.com/slow-and-serious/caller-app', icon: <CodeIcon /> }\n            ]\n        },\n        {\n            tag: 'Django',\n            image: 'https://miro.medium.com/max/700/0*2FHPEDZ26S-p4ozK.png',\n            title: \"Penny-Pinchers\",\n            caption:\"selenium powered\",\n            description: \"This project was built by repurposing a selenium web driver into automatically taking text data for us to show the user. We built this to help people find cheap plane tickets\",\n            links:[\n            {link: 'https://github.com/401n1-midterm/penny-pincher', icon: <GitHubIcon /> },\n            {link: 'https://github.com/401n1-midterm/penny-pincher', icon: <CodeIcon /> }\n          \n            ]\n        },\n        {\n            tag: 'React',\n            image: 'https://colorlib.com/wp/wp-content/uploads/sites/2/react-dev-tools-logo.jpg',\n            title: \"Resume\",\n            caption:\"Martieral Js\",\n            description: \"\tThis project was built with react and material ui to make me a fully responsive resume site.\",\n\n            links:[\n            {link: 'https://github.com/josephlee3454/resume-portfolio', icon: <GitHubIcon /> },\n            {link: 'https://github.com/josephlee3454/resume-portfolio', icon: <CodeIcon /> }\n            ],\n        },\n    ],\n\n    devSkills:[\n        {\n            title: 'MERN',\n            description: [\"ReactJS(functional based hooks)\", \"JavavScript\", \"BootStrap\", \"Martieral UI\", \"Jquery\", \"NodeJS\", \"MongoDB\",\"Expresss\"]\n        },\n        {\n            title: 'Python',\n            description: [\"Django\", \"Django REST APIS\", \"Poetry\", \"Pytest\", \"BeautifulSoup4\", 'Mysql']\n        }\n        ,\n        {\n            title: 'Dev Skills/Tools',\n            description: [\".git\", \"KanBan Board\", \"github actions\", \"selnium\",\"Docker\"]\n        }\n    ]\n    ,\n\n    educationExps:[\n        {\n            title: \"Coding Dojo\" ,\n            date: \"December 2020 - Febuary 2020\",\n            description: \"Certificate -3 Full Stack langauges Python,JavScript,and C# .Net\",\n        },\n        {\n            title: \"Code Fellows Intermediate JavaScript / Advance Python\" ,\n            date: \"February 2020 - November 2020\",\n            description: \"Certificate - Advanced Software Development in Full-Stack Python\",\n        },\n        {\n            title: \"Avera EMT Training \",\n            date: \" June 2017 - August 2018 \",\n            description: \"EMT Certification\",\n\n        },\n        {\n            title: \"SoutEast Technical College\",\n            date: \" July 2017 - january 2018 \",\n            description: \"Pre-nursing program\",\n\n        }\n     \n     \n        \n    ]\n,\n    socials: {\n        Linkedin: {\n            link: 'https://www.linkedin.com/in/joseph-lee-600599b9/',\n            text: 'My LinkedIn',\n            Icon: <LinkedInIcon/>\n        },\n        Github: {\n            link: 'https://github.com/josephlee3454?tab:epositories',\n            text: 'My Github',\n            Icon: <GitHubIcon/>\n        }\n       \n    }\n}\n","/home/owner/dojo/js/props/resume/resume/src/componenets/Button/Button.js",[],{"ruleId":"94","severity":1,"message":"95","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":23},{"ruleId":"94","severity":1,"message":"98","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":36},{"ruleId":"94","severity":1,"message":"99","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"94","severity":1,"message":"100","line":11,"column":10,"nodeType":"96","messageId":"97","endLine":11,"endColumn":18},{"ruleId":"94","severity":1,"message":"101","line":11,"column":20,"nodeType":"96","messageId":"97","endLine":11,"endColumn":28},{"ruleId":"94","severity":1,"message":"102","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":20},{"ruleId":"94","severity":1,"message":"103","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":23,"column":21,"nodeType":"106","endLine":23,"endColumn":67},{"ruleId":"104","severity":1,"message":"105","line":16,"column":33,"nodeType":"106","endLine":16,"endColumn":98},{"ruleId":"94","severity":1,"message":"107","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":15},{"ruleId":"94","severity":1,"message":"108","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":20},{"ruleId":"94","severity":1,"message":"109","line":2,"column":21,"nodeType":"96","messageId":"97","endLine":2,"endColumn":32},{"ruleId":"94","severity":1,"message":"110","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":57},{"ruleId":"94","severity":1,"message":"111","line":3,"column":22,"nodeType":"96","messageId":"97","endLine":3,"endColumn":35},{"ruleId":"94","severity":1,"message":"112","line":3,"column":37,"nodeType":"96","messageId":"97","endLine":3,"endColumn":48},{"ruleId":"94","severity":1,"message":"113","line":3,"column":50,"nodeType":"96","messageId":"97","endLine":3,"endColumn":58},{"ruleId":"94","severity":1,"message":"114","line":3,"column":61,"nodeType":"96","messageId":"97","endLine":3,"endColumn":68},{"ruleId":"94","severity":1,"message":"115","line":3,"column":70,"nodeType":"96","messageId":"97","endLine":3,"endColumn":78},{"ruleId":"94","severity":1,"message":"116","line":3,"column":80,"nodeType":"96","messageId":"97","endLine":3,"endColumn":90},{"ruleId":"94","severity":1,"message":"101","line":3,"column":92,"nodeType":"96","messageId":"97","endLine":3,"endColumn":100},{"ruleId":"94","severity":1,"message":"117","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":21},{"ruleId":"94","severity":1,"message":"98","line":5,"column":9,"nodeType":"96","messageId":"97","endLine":5,"endColumn":13},{"ruleId":"94","severity":1,"message":"102","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":31,"column":40,"nodeType":"120","messageId":"121","endLine":31,"endColumn":42},{"ruleId":"118","severity":1,"message":"119","line":37,"column":82,"nodeType":"120","messageId":"121","endLine":37,"endColumn":84},{"ruleId":"104","severity":1,"message":"105","line":45,"column":29,"nodeType":"106","endLine":45,"endColumn":84},{"ruleId":"94","severity":1,"message":"122","line":7,"column":8,"nodeType":"96","messageId":"97","endLine":7,"endColumn":25},{"ruleId":"94","severity":1,"message":"123","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":25},{"ruleId":"94","severity":1,"message":"124","line":16,"column":8,"nodeType":"96","messageId":"97","endLine":16,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":41,"column":57,"nodeType":"127","endLine":41,"endColumn":61},{"ruleId":"125","severity":1,"message":"126","line":52,"column":54,"nodeType":"127","endLine":52,"endColumn":58},{"ruleId":"125","severity":1,"message":"126","line":108,"column":53,"nodeType":"127","endLine":108,"endColumn":57},{"ruleId":"118","severity":1,"message":"119","line":40,"column":30,"nodeType":"120","messageId":"121","endLine":40,"endColumn":32},{"ruleId":"118","severity":1,"message":"119","line":45,"column":74,"nodeType":"120","messageId":"121","endLine":45,"endColumn":76},{"ruleId":"118","severity":1,"message":"119","line":58,"column":35,"nodeType":"120","messageId":"121","endLine":58,"endColumn":37},{"ruleId":"118","severity":1,"message":"119","line":58,"column":62,"nodeType":"120","messageId":"121","endLine":58,"endColumn":64},{"ruleId":"104","severity":1,"message":"105","line":95,"column":29,"nodeType":"106","endLine":95,"endColumn":96},{"ruleId":"94","severity":1,"message":"128","line":8,"column":8,"nodeType":"96","messageId":"97","endLine":8,"endColumn":18},{"ruleId":"94","severity":1,"message":"129","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":18},{"ruleId":"94","severity":1,"message":"130","line":10,"column":8,"nodeType":"96","messageId":"97","endLine":10,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":13,"column":1,"nodeType":"133","endLine":155,"endColumn":2},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useState' is defined but never used.","'Timeline' is defined but never used.","'Telegram' is defined but never used.","'CustomButton' is defined but never used.","'GetAppIcon' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'SchoolRounded' is defined but never used.","'WorkRounder' is defined but never used.","'Facebook' is defined but never used.","'Twitter' is defined but never used.","'LinkedIn' is defined but never used.","'GitHubIcon' is defined but never used.","'AddCircleIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'TimelineSeparator' is defined but never used.","'TimelineConnector' is defined but never used.","'emailjs' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Porjectone' is defined but never used.","'Projecttwo' is defined but never used.","'Projectthree' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]